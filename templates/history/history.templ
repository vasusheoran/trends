package history

import (
	"fmt"
	"github.com/vsheoran/trends/services/ticker/cards/models"
)

templ HistoryView(tickers []models.Ticker, symbol, pattern string, offset int) {
	<div id="history-section" >
          <script type="module"  src="/static/history.js" rel="stylesheet"></script>
          <table id="default-table" class="w-full text-sm mt-5 text-left rtl:text-right text-gray-100 dark:text-gray-100">
              <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                  <tr>
                      <th data-type="date" data-format="DD-MMM-YYYY" scope="col" class="text-lg px-6 py-3">
                      <span class="flex items-center">Date
                      <svg class="w-4 h-4 ms-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                                              <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m8 15 4 4 4-4m0-6-4-4-4 4"/>
                                          </svg>
                                          </span>
                                          </th>
                      <th scope="col" class="text-lg px-6 py-3">W  </th>
                      <th scope="col" class="text-lg px-6 py-3">X  </th>
                      <th scope="col" class="text-lg px-6 py-3">Y  </th>
                      <th scope="col" class="text-lg px-6 py-3">Z  </th>
                      <th scope="col" class="text-lg px-6 py-3">AD  </th>
                      <th scope="col" class="text-lg px-6 py-3">AR  </th>
                      <th scope="col" class="text-lg px-6 py-3">AS  </th>
                      <th scope="col" class="text-lg px-6 py-3">BN  </th>
                      <th scope="col" class="text-lg px-6 py-3">BP  </th>
                      <th scope="col" class="text-lg px-6 py-3">CW  </th>
                      <th scope="col" class="text-lg px-6 py-3">BR  </th>
                      <th scope="col" class="text-lg px-6 py-3">CC  </th>
                      <th scope="col" class="text-lg px-6 py-3">CE  </th>
                      <th scope="col" class="text-lg px-6 py-3">CH  </th>
                  </tr>
              </thead>
              <tbody id="search-results">
                  for _, tkr := range tickers {
                      <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
                          <th scope="row" class="text-base px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">{ tkr.Date } </th>
                          <td class="text-xl px-6 py-4">{ fmt.Sprintf("%.0f", tkr.W) } </td>
                          <td class="text-xl px-6 py-4">{ fmt.Sprintf("%.0f", tkr.X) } </td>
                          <td class="text-xl px-6 py-4">{ fmt.Sprintf("%.0f", tkr.Y) } </td>
                          <td class="text-xl px-6 py-4">{ fmt.Sprintf("%.0f", tkr.Z) } </td>
                          <td class="text-xl px-6 py-4">{ fmt.Sprintf("%.0f", tkr.AD) } </td>
                          <td class="text-xl px-6 py-4">{ fmt.Sprintf("%.0f", tkr.AR) } </td>
                          <td class="text-xl px-6 py-4">{ fmt.Sprintf("%.0f", tkr.AS) } </td>
                          <td class="text-xl px-6 py-4">{ fmt.Sprintf("%.0f", tkr.BN) } </td>
                          <td class="text-xl px-6 py-4">{ fmt.Sprintf("%.0f", tkr.BP) } </td>
                          <td class="text-xl px-6 py-4">{ fmt.Sprintf("%.0f", tkr.CW) } </td>
                          <td class="text-xl px-6 py-4">{ fmt.Sprintf("%.0f", tkr.BR) } </td>
                          <td class="text-xl px-6 py-4">{ fmt.Sprintf("%.0f", tkr.CC) } </td>
                          <td class="text-xl px-6 py-4">{ fmt.Sprintf("%.0f", tkr.CE) } </td>
                          <td class="text-xl px-6 py-4">{ fmt.Sprintf("%.0f", tkr.CH) } </td>
                      </tr>
                  }
              </tbody>
          </table>
      </div>
}

templ HistoryData(tickers []models.Ticker, symbol, pattern string, offset int) {
}
